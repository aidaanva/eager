/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: SAMTOOLS_FAIDX {
        publishDir = [
            path: { "${params.outdir}/reference/${meta.id}/" },
            mode: params.publish_dir_mode,
            pattern: '*.fai',
            enabled: params.save_reference
        ]
    }

    withName: PICARD_CREATESEQUENCEDICTIONARY {
        publishDir = [
            path: { "${params.outdir}/reference/${meta.id}/" },
            mode: params.publish_dir_mode,
            pattern: '*.dict',
            enabled: params.save_reference
        ]
    }

    withName: BOWTIE2_BUILD {
        publishDir = [
            path: { "${params.outdir}/reference/${meta.id}/" },
            mode: params.publish_dir_mode,
            pattern: 'bowtie2/',
            enabled: params.save_reference
        ]
    }

    withName: BWA_INDEX {
        publishDir = [
            path: { "${params.outdir}/reference/${meta.id}/" },
            mode: params.publish_dir_mode,
            pattern: 'bwa/',
            enabled: params.save_reference
        ]
    }

    withName: BWA_ALN {
        args = { "-n ${params.mapping_bwaaln_n} -k ${params.mapping_bwaaln_k} -l ${params.mapping_bwaaln_l} -o ${params.mapping_bwaaln_o}" }
    }

    withName: 'BWA_SAMSE|BWA_SAMPE' {
        args = { "-r "@RG\\tID:ILLUMINA-${meta.libraryid}\\tSM:${meta.samplename}\\tPL:illumina\\tPU:ILLUMINA-${meta.libraryid}-${meta.seqtype}"" }
        publishDir = [
            path: { "${params.outdir}/mapping/" },
            mode: params.publish_dir_mode,
            pattern: '*{.bam,bai,csi}'
        ]
    }

}
